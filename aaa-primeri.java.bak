//Pravljenje exe-jar fajla za start programa
jar -cvfm fin.jar MANIFEST.MF .
//raspakivanje nekog .jar fajla
jar -xvf ime.jar


//formatiranje velikih brojeva u String---------------------------------
String pattern = "##########.00";
DecimalFormat myFormatter = new DecimalFormat(pattern);
String output = myFormatter.format(value);
System.out.println(value + " " + pattern + " " + output);

//druga metoda za formatiranje brojeva (korisnicki definisana 
//funkcija u okviru neke klase)
//-----------------------------------------------------------
public class Formatiraj(){
	NumberFormat nf = null;
		nf = NumberFormat.getNumberInstance();
		nf.setMaximumFractionDigits(2);
		nf.setMinimumFractionDigits(2);
		nf.setGroupingUsed(false);

	public String format(double dbl)
	{
		return nf.format(dbl);
	}
}
	String strbroj = Formatiraj.format(doublebroj);

//----------------------------------------------------------------------
JOptionPane.showMessageDialog(null, message);		//poruka bez panela
//----------------------------------------------------------------------
//Poruka za potvrdu Yes,No,Cancel(0,1,2) vraca Integer
	   int aaa=0;
	   aaa = JOptionPane.showConfirmDialog(this,"Da li stvarno bri\u0161ete sve podatke");
	   if (aaa == 0){
		   Start();
	   }
//----------------------------------------------------------------------

import java.math.BigDecimal.*;
java.math.BigDecimal broj;
double aaa;
aaa = broj.doubleValue(); -konvertovanje u double


slova kod stampe FOP-----------------------
-------- velika slova ----------JAVA-----------
&#x0160;	- Saljivo			\u0160
&#x0110;	- Djordje			\u0110
&#x010c;	- Covek				\u010c
&#x0106;	- Corak				\u0106
&#x017d;	- Zabokrecina		\u017d
--------- mala slova ----------------------
&#x0161;	- saljivo			\u0161
&#x0111;	- djordje			\u0111
&#x010d;	- covek				\u010d
&#x0107;	- corak				\u0107
&#x017e;	- zabokrecina		\u017e
-------------------------------------------
"&#160;&#160;"    = 2 znaka za odvajanje teksta od pocetka

border-style=\"solid\" border-width=\"0.5pt\"	
font-weight=\"bold\"
font-weight=\"plain\"

border-top-width=\"0.5pt\"
border-bottom-width=\"0.5pt\" border-style=\"solid\"
border-right-width=\"0.5pt\"
border-left-width=\"0.5pt\"
//--------------------------------umetanje slike u izvestaj -----------------------------------
		output.write("              <fo:block space-before.optimum=\"10pt\">\n"); 
		output.write("					<fo:external-graphic src=\"url(proba.gif)\"/>\n");
		output.write("              </fo:block>\n"); 

		duzina slike = 20cm,  sirina = 2 - 2.5 cm
//-------------------------------stampanje vise naloga odjednom mora imati : --------------------------
  <fo:page-sequence master-reference="first">
    <fo:static-content flow-name="xsl-region-before">
	</fo:static-content>
    <fo:static-content flow-name="xsl-region-after">
	</fo:static-content>
    <fo:flow flow-name="xsl-region-body">

	  </fo:flow>
  </fo:page-sequence>
						// izmedju dve strane==========
  <fo:page-sequence master-reference="first">
    <fo:static-content flow-name="xsl-region-after">
	</fo:static-content>
    <fo:flow flow-name="xsl-region-body">
	  </fo:flow>
  </fo:page-sequence>
//================================================================================
/* ------definisanje FOOTER-a na kraju svake strane (region-after)----------------
		output.write("     <fo:static-content flow-name=\"xsl-region-after\">\n"); 
		output.write("        <fo:block font-size=\"10pt\"\n"); 
		output.write("                  font-family=\"sans-serif\"\n"); 
		output.write("                  line-height=\"normal\"\n"); 
		output.write("                  text-align=\"center\"\n"); 
		output.write("                  >" + "podnozje strane" + "</fo:block>\n"); 
		output.write("     </fo:static-content>\n"); 
*/
//--------------------------------------------------------------------------------

odredjivanje visine celije---------"               "---------------------------------------------------------
<fo:table-cell text-align=\"left\" height=\"2.8cm\" border-right-width=\"0.5pt\" border-right-style=\"solid\">

definisanje tabele kad ocemo da imamo delimicne bordere
-------------------------------------------------------
<fo:table border-collapse=\"separate\" table-layout=\"fixed\">

				** poravnanje udesno kod txt polja **
 //--------------------------------------------------------------------------
		t[0].setHorizontalAlignment(JTextField.TRAILING); na kraj polja
		t[0].setHorizontalAlignment(JTextField.LEFT);
		LEADING
		TOP
		SOUTH
		CENTER
		EAST
		RIGHT
 //--------------------------------------------------------------------------
		lblRadim = new JLabel("");
		lblRadim.setFont(new Font("Arial",Font.BOLD,14));
		lblRadim.setFont(new Font("Arial",Font.PLAIN,10));
		lblRadim.setFont(new Font("YU-Time",Font.TRUETYPE_FONT,10))

		lblRadim.setForeground(Color.red);

	lblRadim.setText("Te\u010de obrada molim sa\u010dekajte ......");
	paintAll(getGraphics());
	lblRadim.setForeground(Color.blue);
	lblRadim.setText("Obrada zavr\u0161ena");

 //--------------------------------------------------------------------------
	if (t[0].getText().trim().length() != 0 && t[1].getText().trim().length() != 0 && 
		t[2].getText().trim().length() != 0 && t[3].getText().trim().length() != 0 &&
		t[4].getText().trim().length() != 0 && t[5].getText().trim().length() != 0 &&
		t[6].getText().trim().length() != 0 && t[7].getText().trim().length() != 0 &&
		t[8].getText().trim().length() != 0 && t[9].getText().trim().length() != 0 &&
		t[10].getText().trim().length() != 0 && t[11].getText().trim().length() != 0)
	{


	}else{
		JOptionPane.showMessageDialog(this, "Prvo popunite sva polja");
		t[0].requestFocus();
	}
 //--------------------------------------------------------------------------
   private String konvertujDatum(String _datum){
		String datum,pom;
		pom = _datum;
		datum = pom.substring(6,10);
		datum = datum + "-" + pom.substring(3,5);
		datum = datum + "-" + pom.substring(0,2);
	return datum;
   }
//------------------------------------------------------------------------------------------------------------------
	public void izvrsi(String sql) {
      Statement statement = null;
	  try {
			statement = connection.createStatement();
			int result = statement.executeUpdate( sql );
      }
      catch ( SQLException sqlex ) {
			JOptionPane.showMessageDialog(null, "Greska: " + sqlex);
			JOptionPane.showMessageDialog(null, "Upit:" + sql);
      }
	  finally{
		if (statement != null){
			try{
				statement.close();
				statement = null;
			}catch (Exception e){
				JOptionPane.showMessageDialog(null, "Nije uspeo da zatvori statement");}}
	  }
  }
//----------------------------------------------------------------------------------------------
	  Statement statement = null;
//----------------------------------------------------------------------------------------------
		//.....................................................................................
		finally{
			if (statement != null){
				try{
					statement.close();
					statement = null;
				}catch (Exception e){
					JOptionPane.showMessageDialog(null, "Nije uspeo da zatvori statement");}}
		}
		//.....................................................................................


//splash labela==============================================================================
    private JWindow splashScreen = null;
    private JLabel splashLabel = null;

	
	
	public void createSplashScreen() {
	splashLabel = new JLabel(createImageIcon("Splash.jpg", "Splash.accessible_description"));
	
	    splashScreen = new JWindow(getFrame());
	    splashScreen.getContentPane().add(splashLabel);
	    splashScreen.pack();
	    Rectangle screenRect = getFrame().getGraphicsConfiguration().getBounds();
	    splashScreen.setLocation(
         screenRect.x + screenRect.width/2 - splashScreen.getSize().width/2,
		 screenRect.y + screenRect.height/2 - splashScreen.getSize().height/2);
    }

    public void showSplashScreen() {
	    splashScreen.show();
    }

    /**
     * pop down the splash screen
     */
    public void hideSplash() {
	if(!isApplet()) {
	    splashScreen.setVisible(false);
	    splashScreen = null;
	    splashLabel = null;
	}
    }
	//----AKCIJA--------------------------------------------------------------------------
		createSplashScreen();

		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
			showSplashScreen();}});

		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
			showSwingSet2();
			hideSplash();}});

//==========================================================================================
    private ResourceBundle bundle = null;

    public String getString(String key) {
		String value = null;
		try {
			value = getResourceBundle().getString(key);
		} catch (MissingResourceException e) {
			System.out.println("java.util.MissingResourceException: Couldn't find value for: " + key);
		}
		if(value == null) {
			value = "Could not find resource: " + key + "  ";
		}
		return value;
    }
//====================properties files=========================================================
   	  FileOutputStream fos = new FileOutputStream("birds.out");
      
      java.util.Properties xmlProps = OutputPropertiesFactory.getDefaultMethodProperties("xml");
      xmlProps.setProperty("indent", "yes");
      xmlProps.setProperty("standalone", "no");      
      Serializer serializer = SerializerFactory.getSerializer(xmlProps);
      serializer.setOutputStream(fos);

//==========================================================================================
		  //polje se moze menjati u tabeli samo ako je definisan primarni kljuc
		statement = connection.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY,
                                java.sql.ResultSet.CONCUR_UPDATABLE);
		statement.setFetchSize(25);

			String query = "SELECT * FROM tmpfinkar ORDER BY datum, vrprom, brrac";
		         ResultSet rs = statement.executeQuery( query );
		         while(rs.next()){
					dugu = rs.getDouble("dugu");
					potr = rs.getDouble("potr");
					saldo = saldo + dugu - potr;
					//rs.moveToUpdateRow();
					rs.updateDouble("saldo",saldo);
					rs.updateString("naziv","akslajd");
					rs.updateInt("sifra",11);




//============================setovanje mysql servera da moze sa druge masine==========
sa mySQLLyog konektujes se u bazu 'mysql' i ukucas sql komandu:

	GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'
	IDENTIFIED BY 'bin123' WITH GRANT OPTION;

 //====================================================================================
	Export u XML fajl

import javax.xml.parsers.*;
import org.apache.xml.serialize.*;
import org.w3c.dom.*;
import org.xml.sax.*;

	try {
	//Ovako se kreira DOM Document objekat
	DocumentBuilder docBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
	Document doc = docBuilder.newDocument();
	//Dalje je sve standardni DOM. npr.
	Element rootElem = doc.createElement("Data");
	doc.appendChild(rootElem);

		Element firstElem = doc.createElement("ROW");
		//firstElem.setAttribute("id","xxxxx");
		//firstElem.setTextContent("aaaaaa");
		Element sifm = doc.createElement("sifm");
		Element nazivm = doc.createElement("nazivm");

		sifm.setTextContent(record[0]);
		firstElem.appendChild(sifm);
		rootElem.appendChild(firstElem);

	FileWriter fw = new FileWriter("./slanje/sifrobe.xml");
	OutputFormat outFormat = new OutputFormat();
	outFormat.setEncoding("UTF-8");
	outFormat.setIndenting(true);

	XMLSerializer ser = new XMLSerializer(fw, outFormat);
	ser.serialize(doc);
	}
	catch (Exception ex) {
			JOptionPane.showMessageDialog(null, ex);		
	}
//===================================================================================================
//	pokretanje eksternog programa
	String acrobat="/../../Program Files/Adobe/Acrobat 5.0/Reader/AcroRd32.exe"
		try{
			Process proc = Runtime.getRuntime().exec(new String(akrobat + " ./pdf/stampa.pdf"),null);
		}catch (Exception e){System.out.println(e);}
//===================================================================================================
Ako kod prikaza tabele sa rs.getBigDecimal("ROUND(nekiiznos,2)") n.p.r. pocne da brljavi prikaz 
	proveriti da li tabela ima "NULL" vrednosti i to srediti i staviti u "Alter table" da ne
	moze da ima.

//===================================================================================================
//-------------------------------------------------------------------------------
RAD Sa vector nizom vracanje podataka iz niza:
	
	Vector podaci;
	int duzina = podaci.size();

	if (podaci.isEmpty())
	{
	}else{

        while ( i < duzina  ) {
               String[] record = new String[2];
				record[0] = ((String[])podaci.elementAt(i))[0];	
				record[1] = ((String[])podaci.elementAt(i))[1];	
		}
	}
//-------------------------------------------------------------------------------
Sortiranje u tabeli po kolonama (treba kopirati TableSorter.java i TableMap.java u folder)
dodati sledece kod funkcije buildTable() posle reda
	   	qtbl.query(sql);
	dodaje se:
		TableSorter sorter = new TableSorter(qtbl); 
		jtbl = new JTable( sorter );
        sorter.addMouseListenerToHeaderInTable(jtbl); 
        jtbl.setPreferredScrollableViewportSize(new Dimension(500, 70));
		//ovu liniju komentarisati
 	   	//jtbl = new JTable( qtbl );

Klik misem (levi ili desni taster) na kolonu sortira tabelu po rastucem redosledu a 
Shift+click sortira po opadajucem redosledu.

================ JASPER REPORT =================================
	iReport	- ubacivanje rednog broja u izvestaj po redovima
	ide u "Variables"	COLUMN_COUNT


 =================PROPERTIES=============================
	InputStream stream = null;
	String strkasa = "";
	stream = new InputStream("prenos.properties");
	Properties prop = new Properties();
	try {
	    prop.load(stream);
	} catch (IOException e) {
		JOptionPane.showMessageDialog(null, "Ne postoji properties fajl:"+e);		
	}

	Object tempName = prop.get("kasa");
	if (tempName != null) {
	    strkasa = tempName.toString();
	}

// rad sa datumima kad se na osnovu nekog i broja dana formira drugi datum
//moze ici i unazad (-10)n.p.r.
//-------------------------------------------------------------------------------
		Calendar kalendar = Calendar.getInstance();
		ParsePosition pp = new ParsePosition(0);
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		java.util.Date ddatum = df.parse(t[3].getText().trim(),pp);
		kalendar.setTime(ddatum);
		
		int kolikodana = proveriDane();// uzima zbroj dana iz sifarnika saradnika
		kalendar.roll(Calendar.DAY_OF_YEAR,kolikodana);

		datumvalute = new java.util.Date();
		datumvalute = kalendar.getTime();
		String nnn = df.format(datumvalute);

		t[4].setText(nnn);
//-------------------------------------------------------------------------------
//-------------Funkcija koja izracunava novi datum na osnovu starog i broja dana--
	private String NoviDatum(String _stariDatum,int _brojdana){
		String noviDatum="";
		Calendar kalendar = Calendar.getInstance();
		ParsePosition pp = new ParsePosition(0);
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		java.util.Date ddatum = df.parse(_stariDatum.trim(),pp);
		kalendar.setTime(ddatum);
		
		kalendar.roll(Calendar.DAY_OF_YEAR,_brojdana);

		datumvalute = new java.util.Date();
		datumvalute = kalendar.getTime();
		noviDatum = df.format(datumvalute);

		return noviDatum;
	}
//------------------- PROVERA DATUMA      --------------------------
   public boolean proveriDatum(String _datum){
		boolean ispravan = false;
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		java.util.Date testDate = null;
		try
		{
			testDate = sdf.parse(_datum);
		}
		//provera da li je odgovarajuci format datuma
		catch (ParseException e)
		{
			JOptionPane.showMessageDialog(this, "Neispravan format datuma");
			return false;
		}
		//provera da li je datum ispravan
		if (!sdf.format(testDate).equals(_datum))
		{
			JOptionPane.showMessageDialog(this, "Neispravan datum");
			return false;
		}

		return true;
   }
